;; web-mode loading
(add-to-list 'load-path "~/.emacs.d/web-mode/")
(require 'web-mode)
(add-to-list 'auto-mode-alist '("\\.phtml\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.tpl\\.php\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.[agj]sp\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.as[cp]x\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.erb\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.mustache\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.djhtml\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.php\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.html?\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.s?css\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.tsx?\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.jsx?\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.xml\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.info\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.module\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.inc\\'" . web-mode))
; web-mode settings
(defun kck-web-mode-hook ()
  "Hooks for Web mode."
  (setq web-mode-css-indent-offset 2)
  (setq web-mode-code-indent-offset 2)
  (setq web-mode-markup-indent-offset 2)
  (setq web-mode-enable-auto-pairing t)
  (setq web-mode-enable-css-colorization t)
  (setq web-mode-enable-block-face t)
  (setq web-mode-enable-part-face t)
  (setq web-mode-enable-comment-keywords t)
  (setq web-mode-enable-heredoc-fontification t)
  (setq web-mode-enable-current-element-highlight t)
  (setq web-mode-enable-current-column-highlight t)
  )
(add-hook 'web-mode-hook  'kck-web-mode-hook)

;; toggle indent helpers

(defun web-toggle-css-indent-setting ()
  "toggle web-mode css indent between 2 and 4"
  (interactive)
  (setq web-mode-css-indent-offset (if (= web-mode-css-indent-offset 2) 4 2))
  (message "set css-indent to %d." web-mode-css-indent-offset)
  (redraw-display)
  )
(defun web-toggle-code-indent-setting ()
  "toggle web-mode code indent between 2 and 4"
  (interactive)
  (setq web-mode-code-indent-offset (if (= web-mode-code-indent-offset 2) 4 2))
  (message "set code-indent to %d." web-mode-code-indent-offset)
  (redraw-display)
  )
(defun web-toggle-markup-indent-setting ()
  "toggle web-mode markup indent between 2 and 4"
  (interactive)
  (setq web-mode-markup-indent-offset (if (= web-mode-markup-indent-offset 2) 4 2))
  (message "set markup-indent to %d." web-mode-markup-indent-offset)
  (redraw-display)
  )
(defun web-toggle-indent-setting ()
  "toggle web-mode indent between 2 and 4"
  (interactive)
  (web-toggle-css-indent-setting)
  (web-toggle-code-indent-setting)
  (web-toggle-markup-indent-setting)
  (message "set web-mode indent: css=%d, code=%d, markup=%d." web-mode-css-indent-offset web-mode-code-indent-offset web-mode-markup-indent-offset)
  (redraw-display)
  )
(global-set-key "\C-ctwi" 'web-toggle-indent-setting)

;; custom-web-reformat

(defun custom-web-reformat-2 ()
  "indent whole buffer"
  (interactive)
  (setq web-mode-css-indent-offset 2)
  (setq web-mode-code-indent-offset 2)
  (setq web-mode-markup-indent-offset 2)
  (delete-trailing-whitespace)
  (indent-region (point-min) (point-max) nil)
  (untabify (point-min) (point-max))
  )

(defun custom-web-reformat-4 ()
  "indent whole buffer"
  (interactive)
  (setq web-mode-css-indent-offset 4)
  (setq web-mode-code-indent-offset 4)
  (setq web-mode-markup-indent-offset 4)
  (delete-trailing-whitespace)
  (indent-region (point-min) (point-max) nil)
  (untabify (point-min) (point-max))
  )

(defun custom-web-reformat-cli-2 ()
  "indent the given file and save"
  (web-mode)
  (setq web-mode-css-indent-offset 2)
  (setq web-mode-code-indent-offset 2)
  (setq web-mode-markup-indent-offset 2)
  (delete-trailing-whitespace)
  (indent-region (point-min) (point-max) nil)
  (untabify (point-min) (point-max))
  (save-buffer)
  )

(defun custom-web-reformat-cli-4 ()
  "indent the given file and save"
  (web-mode)
  (setq web-mode-css-indent-offset 4)
  (setq web-mode-code-indent-offset 4)
  (setq web-mode-markup-indent-offset 4)
  (delete-trailing-whitespace)
  (indent-region (point-min) (point-max) nil)
  (untabify (point-min) (point-max))
  (save-buffer)
  )
